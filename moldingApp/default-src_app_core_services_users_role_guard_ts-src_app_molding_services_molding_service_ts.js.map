{"version":3,"file":"default-src_app_core_services_users_role_guard_ts-src_app_molding_services_molding_service_ts.js","mappings":"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","sources":["./src/app/_interfaces/molding/molding.ts","./src/app/core/services/users/role.guard.ts","./src/app/molding/services/core.service.ts","./src/app/molding/services/kit.service.ts","./src/app/molding/services/molding.service.ts","./src/app/molding/services/other-materials.service.ts","./src/app/tooling/services/tool.service.ts"],"sourcesContent":["import { Tool } from 'src/app/_interfaces/tooling/tool';\r\nimport { User } from 'src/app/_interfaces/user';\r\nimport { AdditionalMaterial, Core, Kit } from './composite-material-types';\r\n\r\n/**\r\n * En base de donnée :\r\n *\r\n * matPolym &  matDrap : idKit le plus dévaforable respectivement pour la polym et pour le drapage\r\n * moldingUser : id\r\n * kits : boucler sur une autre table pour enregistrer les kits sur avec l'id de moulage en liaison\r\n *\r\n * @export\r\n * @interface Molding\r\n */\r\nexport class Molding {\r\n  id: number;\r\n  kits: Kit[] = [];\r\n  moldingDay: Date = new Date();\r\n  createdBy: User;\r\n  outillage: string;\r\n  aCuireAv?: Date;\r\n  aDraperAv?: Date;\r\n  matPolym?: Kit;\r\n  matDrap?: Kit;\r\n  woList?: any[];\r\n  updatedAt?: Date;\r\n  status?: boolean;\r\n  userCreat?: User;\r\n  OT?: Tool;\r\n  materialSupplementary?: AdditionalMaterial[]= [];\r\n\r\n  getIri(){\r\n    return `api/moldings/${this.id}`;\r\n  }\r\n}\r\n\r\nexport interface MoldingIri {\r\n  id: number;\r\n  kits: string[];\r\n  moldingDay: Date;\r\n  createdBy?: string;\r\n  outillage: string;\r\n  aCuireAv: Date;\r\n  aDraperAv: Date;\r\n  matPolym: string;\r\n  matDrap: string;\r\n  woList?: any[];\r\n  updatedAt?: Date;\r\n  materialSupplementary?: string[];\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { AlertService } from '../divers/alert.service';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private alerteService: AlertService,\n    private router: Router,\n\n  ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot): boolean {\n    const expectedRole = route.data.expectedRole;\n    const isRole = this.isRole(expectedRole);\n    if (!isRole) {\n      // console.error('Impossible d\\'accéder à la page');\n      this.alerteService.simpleAlert(\n        'Alerte de l\\'application',\n        'Autorisation',\n        'Vous n\\'avez pas accès à cette page'\n      );\n      this.router.navigate(['home']);\n    }\n    return (\n      this.authService.isAuth && isRole && this.authService.authUser.isActive\n    );\n  }\n\n  isRole(expectedRoles: string[]): boolean {\n    // console.log(expectedRoles);\n    if (this.authService.authUser) {\n      return expectedRoles.some((expectedRole => this.authService.authUser.roles.includes(expectedRole)));\n    }\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AdditionalMaterial, Core } from 'src/app/_interfaces/molding/composite-material-types';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n\r\n  getCoreByBatchNumber(batchNumber: string): Observable<Core | undefined> {\r\n    let returnBatchNumber: any = batchNumber.substring(5,).split('~');\r\n    returnBatchNumber = {\r\n      partNumber: returnBatchNumber[0],\r\n      batch1: returnBatchNumber[1],\r\n      //TODO retirer les deux premiers caractères\r\n      batch2: returnBatchNumber[2],\r\n      // TODO batch3: trois derniers caractères de batch2\r\n    };\r\n    const core: Core = {\r\n      idCore: 1,\r\n      batchNumber: returnBatchNumber\r\n    };\r\n    return of(core);\r\n  }\r\n  getIri(obj: AdditionalMaterial){\r\n    return `/api/additional_materials/${obj.id}`;\r\n  }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { RequestService } from 'src/app/core/services/request.service';\nimport { of } from 'rxjs';\nimport { map, } from 'rxjs/operators';\nimport { Kit } from 'src/app/_interfaces/molding/composite-material-types';\nimport { AlertService } from 'src/app/core/services/divers/alert.service';\n\n@Injectable()\nexport class KitService {\n  constructor(\n    private requestService: RequestService,\n    private alertService: AlertService,\n  ) { }\n\n  getKitById(id: string) {\n    // const kitSubject: Subject<Kit> = new Subject();\n    return this.requestService.createGetRequest(`${environment.moldingApi}datas_kits?page=1&idMM=${id}`)\n      .pipe(\n        // takeWhile((returnsData) => returnsData.length > 0 ),\n        map((returnsData) => {\n          if (returnsData.length === 0) {\n            this.alertService.simpleAlert(\n              `Erreur`,\n              `Kit non trouvé`,\n              `Veuillez ré-essayer`\n            );\n            throw new Error(`aucun kit ne correspond au numéro : ${id}`);\n          }\n          const kit: Kit = {\n            id: returnsData[0].id,\n            aCuirAv: returnsData[0].ACuirAv,\n            aDrapAv: returnsData[0].ADrapAv,\n            createdAt: returnsData[0].createdAt,\n            decongel: returnsData[0].Decongel,\n            designationSAP: returnsData[0].DesignationSAP,\n            idMM: returnsData[0].idMM,\n            lotSAP: returnsData[0].LotSAP,\n            peremptionMoins18: returnsData[0].PeremptionMoins18,\n            referenceSAP: returnsData[0].ReferenceSAP,\n            status: returnsData[0].status,\n            tackLife: returnsData[0].TackLife,\n            timeOut: returnsData[0].TimeOut,\n            updateAt: returnsData[0].updateAt\n          };\n          return kit;\n        }),\n        // catchError((error) => this.handleError(error))\n      );\n    // return kitSubject;\n  }\n  // if (returnsData.length > 0) {\n  // (error) => {\n  //   console.error(error);\n\n\n  isPerim(dateToCheck: Date, baseDate: Date): boolean {\n    return (new Date(dateToCheck) < new Date(baseDate));\n  }\n\n  /**\n   * test si kit déjà dans le moulage\n   *\n   * @param kitToTest du type KIT\n   * @param kits la liste des kits\n   * @return retourne un boolean\n   * @memberof KitService\n   */\n  kitIsInKits(kitToTest: Kit, kits: Kit[]): boolean {\n    return kits.some(kit => kit.idMM === kitToTest.idMM);\n  }\n\n  getIri(kit: Kit): string {\n    return `/api/datas_kits/${kit.id}`;\n  }\n\n  // private async wrongKitInputAlert() {\n\n  //   const alert = await this.alertController.create({\n  //     cssClass: 'my-custom-class',\n  //     header: 'Erreur Kit',\n  //     subHeader: 'Kit non conforme',\n  //     message: 'Il semble y avoir un problème avec le kit scanné. Vérifier le kit et essayer de nouveau.',\n  //     buttons: ['OK']\n  //   });\n\n  //   await alert.present();\n\n  //   const { role } = await alert.onDidDismiss();\n  //   // console.log('onDidDismiss resolved with role', role);\n  // }\n\n  private handleError(error: Error, errorValue: any = 'error') {\n    // console.error(error);\n    this.alertService.simpleAlert(\n      'Erreur Kit',\n      'Kit non conforme',\n      'Il semble y avoir un problème avec le kit scanné. Vérifier le kit et essayer de nouveau.');\n    return of();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { forkJoin, from, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Molding, MoldingIri } from 'src/app/_interfaces/molding/molding';\r\nimport { environment } from 'src/environments/environment';\r\nimport { KitService } from './kit.service';\r\nimport { ToolService } from 'src/app/tooling/services/tool.service';\r\nimport { RequestService } from 'src/app/core/services/request.service';\r\nimport { AdditionalMaterial, Kit } from 'src/app/_interfaces/molding/composite-material-types';\r\nimport { CoreService } from './core.service';\r\nimport { Tool } from 'src/app/_interfaces/tooling/tool';\r\nimport { AlertService } from 'src/app/core/services/divers/alert.service';\r\nimport { LoadingService } from 'src/app/core/services/divers/loading.service';\r\nimport { OtherMaterialsService } from './other-materials.service';\r\n\r\n/**\r\n * Service de gestion des moulages\r\n *\r\n * @export\r\n * @class MoldingService\r\n */\r\n@Injectable(\r\n  {\r\n    providedIn: 'root'\r\n  }\r\n)\r\n\r\nexport class MoldingService {\r\n  public molding: Molding;\r\n  public molding$: Subject<Molding> = new Subject();\r\n  public moldingStatus: Subject<boolean> = new Subject();\r\n  private moldingIri: MoldingIri;\r\n\r\n  constructor(\r\n    private kitService: KitService,\r\n    private matService: OtherMaterialsService,\r\n    private toolService: ToolService,\r\n    private requestService: RequestService,\r\n    private coreService: CoreService,\r\n    private alertService: AlertService,\r\n    private navCtrl: NavController,\r\n    private loadingService: LoadingService,\r\n  ) {\r\n    this.molding = new Molding();\r\n    this.updateMoldings();\r\n  }\r\n\r\n\r\n  getMoldingStatus(): Observable<boolean> {\r\n    return from(this.moldingStatus);\r\n  }\r\n\r\n  /**\r\n   *: Observable<Molding>\r\n   *\r\n   * @param moldingObject\r\n   * @return un observable\r\n   * @memberof MoldingService\r\n   */\r\n  saveMolding(print: boolean) {\r\n    // const check$: Observable<void> = this.checkMoldingDatas();\r\n    // const savingOtherMat$: Observable<void>;\r\n    // const saveMolding: Observable<void>;\r\n\r\n    this.moldingStatus.subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        //TODO check les additionnal materials\r\n        this.saveOtherMaterials()\r\n          .subscribe(\r\n            (resp: AdditionalMaterial[]) => {\r\n              console.log(resp);\r\n              this.molding.materialSupplementary = resp;\r\n              this.moldingIri = this.toIri();\r\n              // resp.subscribe(() => {\r\n              const saveMethod = (this.molding.id) ? this.patchMolding() : this.postMolding();\r\n              saveMethod\r\n                .subscribe((val) => {\r\n                  if (print) { this.printMolding(); }\r\n                });\r\n              // });\r\n\r\n            });\r\n      },\r\n      (err) => {\r\n        //TODO mettre en place un service d'erreur qui se chargera de créer les alertes ou non en fonction d'un param\r\n        this.alertService.simpleAlert('La vérification du moulage a échoué', err.title, err.message);\r\n      });\r\n\r\n\r\n    // .subscribe(\r\n    //   () => {\r\n    //     if (print) {\r\n    //       this.printMolding();\r\n    //     } else {\r\n    //       // On demande si on veut imprimer ou non\r\n    //       this.alertService.presentAlertConfirm(\r\n    //         'Enregistrement effectué',\r\n    //         'Voulez-vous imprimer la fiche ?')\r\n    //         .then((response) => { if (response) { this.printMolding(); } });\r\n    //     }\r\n    //   },\r\n    //   (err) => {\r\n    //     this.alertService.simpleAlert(\r\n    //       'Erreur de sauvegarde',\r\n    //       'Le moulage n\\'a pas été sauvegardé',\r\n    //       err\r\n    //     );\r\n    //   });\r\n    //   },\r\n\r\n    // );\r\n  }\r\n\r\n\r\n  loadMolding(moldingId: string) {\r\n    this.loadingService.startLoading('Patienter pendant le chargement du moulage');\r\n    // TODO à rebrancher qqp this.molding.updatedAt = new Date();\r\n    this.getMoldingById(moldingId)\r\n      .subscribe(\r\n        (molding) => {\r\n          this.molding = molding;\r\n          this.updateMoldings();\r\n          this.loadingService.stopLoading();\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n          this.loadingService.stopLoading();\r\n          this.alertService.simpleAlert(\r\n            'Erreur moulage',\r\n            `Erreur de récupération du moulage`,\r\n            `Le moulage ${moldingId} n'existe pas`,\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n     * Vérifie les données du moulage :\r\n     * # vérifie la présence de l'outillage\r\n     * # vérifie s'il y a au moins un kit\r\n     *\r\n     * @return\r\n     * @memberof CreateMoldingPage\r\n     */\r\n  checkMoldingDatas() {\r\n    if (this.molding.OT === undefined) {\r\n      const missingToolMsg = 'Voulez-vous continuer sans outillage ?';\r\n      this.alertService.presentAlertConfirm('OUTILLAGE MANQUANT', missingToolMsg)\r\n        .then(\r\n          (response) => {\r\n            if (response) {\r\n              this.moldingStatus.next(true);\r\n            } else {\r\n              const title = 'OUTILLAGE MANQUANT';\r\n              const message = 'Veuillez renseigner l\\'outillage de moulage';\r\n              this.moldingStatus.next(false);\r\n            }\r\n          },\r\n          (err) => {\r\n            const title = `Outillage de moulage manquant`;\r\n            const message = 'Il n\\'y a pas eu de réponse de l\\'utilisateur';\r\n            this.moldingStatus.error(new Error(message));\r\n          });\r\n    } else if (this.molding.kits.length === 0) {\r\n      const title = 'Il n\\'y a pas de kit';\r\n      const message = `Pour insérer un kit matière munissez vous d'une fiche de vie et scannez le code barre.\r\n            Si besoin d'aide complémentaire appelez le 06.87.89.24.25`;\r\n      this.moldingStatus.error(new Error(message));\r\n    } else {\r\n      this.moldingStatus.next(true);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Recalcul le kit le plus défavorable\r\n   *\r\n   * @todo supprimer les lignes commentées\r\n   * @param molding\r\n   * @memberof MoldingService\r\n   */\r\n  updateDates(): void {\r\n    // REINITIALISATION\r\n    this.molding.aCuireAv = null;\r\n    this.molding.aDraperAv = null;\r\n    // IDENTIFIER MATIERES DEFAVORABLES\r\n    this.molding.matPolym = this.molding.kits.reduce((defPolym, kit) => {\r\n      if (defPolym.aCuirAv > kit.aCuirAv) {\r\n        return kit;\r\n      } else {\r\n        return defPolym;\r\n      }\r\n    });\r\n    this.molding.matDrap = this.molding.kits.reduce((defDrap, kit) => (defDrap.aDrapAv > kit.aDrapAv) ? kit : defDrap);\r\n\r\n\r\n    // RESULTATS DATE LIMITES EN PRENANT EN COMPTE LA POSSIBILITE DE DEPASSEMENT DE LA DATE A -18°C\r\n    // console.log(molding.kits);\r\n    const smallest18Kit = this.molding.kits.reduce((previousKit, kit) => {\r\n      // console.log(previousKit.peremptionMoins18);\r\n      // console.log(kit.peremptionMoins18);\r\n      // console.log((previousKit.peremptionMoins18 > kit.peremptionMoins18));\r\n      if (previousKit.peremptionMoins18 > kit.peremptionMoins18) {\r\n        return kit;\r\n      }\r\n      return previousKit;\r\n    });\r\n\r\n    // A POLYMERIER AVANT LE :\r\n    if (this.molding.matPolym.aCuirAv < smallest18Kit.peremptionMoins18) {\r\n      this.molding.aCuireAv = this.molding.matPolym.aCuirAv;\r\n    } else {\r\n      this.molding.aCuireAv = smallest18Kit.peremptionMoins18;\r\n    }\r\n\r\n    // A DRAPER AVANT LE :\r\n    if (this.molding.matDrap.aDrapAv < smallest18Kit.peremptionMoins18) {\r\n      this.molding.aDraperAv = this.molding.matDrap.aDrapAv;\r\n    } else {\r\n      this.molding.aDraperAv = smallest18Kit.peremptionMoins18;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Construit un objet molding depuis le serveur.\r\n   *\r\n   * @param id id du mouage. C'est l'id qui est encodé sur le code barre de la fiche de moulage\r\n   * @return\r\n   * @memberof MoldingService\r\n   */\r\n  getMoldingById(id: string): Observable<Molding> {\r\n    return this.requestService.createGetRequest(`${environment.moldingApi}moldings/${id}`)\r\n      .pipe(\r\n        map((returnsData: any) => {\r\n          returnsData.kits = this.moldingServerToMoldingObject(returnsData);\r\n          return returnsData;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  /**\r\n   * Fonction utilisé dans la page d'administration pour lister tout les moulages.\r\n   *\r\n   * @return retourne la liste complète des moulages\r\n   * @memberof MoldingService\r\n   */\r\n  getMoldings(): Observable<Molding[]> {\r\n    return this.requestService.createGetRequest(`${environment.moldingApi}moldings`);\r\n  }\r\n\r\n  addKit(kit: Kit) {\r\n    const kitIsInKits = this.kitService.kitIsInKits(kit, this.molding.kits);\r\n    if (!kitIsInKits) {\r\n      this.molding.kits.push(kit);\r\n      this.updateDates();\r\n      this.updateMoldings();\r\n    } else {\r\n      this.alertService.presentToast('Le kit a déjà été scanné');\r\n      console.error('kit en doublon');\r\n    }\r\n  }\r\n\r\n  addNida(material) {\r\n    this.molding.materialSupplementary.push(material);\r\n    this.updateMoldings();\r\n  }\r\n\r\n  /**\r\n   * On  traite une entrée d'un Tool\r\n   *\r\n   * @private\r\n   * @param toolObj\r\n   * @memberof CreateMoldingPage\r\n   */\r\n  addTool(responseTool: Tool) {\r\n    this.molding.OT = responseTool;\r\n    this.alertService.presentToast('Outillage associé !');\r\n    this.updateMoldings();\r\n  }\r\n  private saveOtherMaterials(): Observable<any> {\r\n    return forkJoin(this.molding.materialSupplementary.map(mat => this.matService.addOne(mat)));\r\n  }\r\n\r\n  private postMolding() {\r\n    const moldingIri = this.toIri();\r\n    return this.requestService.createPostRequest(`${environment.moldingApi}moldings`, moldingIri, true);\r\n    // .pipe(\r\n    //   map((response: any) => {\r\n    //       response.kits = this.moldingServerToMoldingObject(response);\r\n    //       return response;\r\n    //     })\r\n    //     );\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param moldingObject\r\n   * @return observable\r\n   * @memberof MoldingService\r\n   */\r\n  private patchMolding(): Observable<Molding> {\r\n    const moldingIri = this.toIri();\r\n    const url = `${environment.moldingApi}moldings/${moldingIri.id}`;\r\n    return this.requestService.createPatchRequest(url, moldingIri);\r\n  }\r\n\r\n  private updateMoldings() {\r\n    this.molding$.next(this.molding);\r\n  }\r\n\r\n  private toIri(): MoldingIri {\r\n    const molding = this.molding;\r\n    return {\r\n      id: molding.id,\r\n      kits: molding.kits.map((kit: Kit) => this.kitService.getIri(kit)),\r\n      materialSupplementary: molding.materialSupplementary.map((mat: any) => this.coreService.getIri(mat)),\r\n      moldingDay: molding.moldingDay,\r\n      // createdBy: this.userService.getIri(molding.createdBy),\r\n      outillage: (molding.OT) ? this.toolService.getIri(molding.OT) : null,\r\n      aCuireAv: molding.aCuireAv,\r\n      aDraperAv: molding.aDraperAv,\r\n      matPolym: this.kitService.getIri(molding.matPolym),\r\n      matDrap: this.kitService.getIri(molding.matDrap),\r\n    };\r\n  }\r\n\r\n  //TODO à supprimer\r\n  /**\r\n   * Cette fonction sera à détruire une fois l'issue gitHub #23 sera résolue\r\n   * https://github.com/Joris-G/daherApp/issues/23\r\n   *\r\n   * @param moldingToTransform\r\n   * @return objet moulage converti depuis la donnée reçue du serveur\r\n   * @memberof MoldingService\r\n   */\r\n  private moldingServerToMoldingObject(moldingToTransform: any): Kit[] {\r\n    return moldingToTransform.kits.map((kitApi: any) => {\r\n      const kit: Kit = {\r\n        aCuirAv: kitApi.ACuirAv,\r\n        aDrapAv: kitApi.ADrapAv,\r\n        createdAt: kitApi.createdAt,\r\n        decongel: kitApi.Decongel,\r\n        designationSAP: kitApi.DesignationSAP,\r\n        id: kitApi.id,\r\n        idMM: kitApi.idMM,\r\n        lotSAP: kitApi.LotSAP,\r\n        peremptionMoins18: kitApi.PeremptionMoins18,\r\n        referenceSAP: kitApi.ReferenceSAP,\r\n        status: kitApi.status,\r\n        tackLife: kitApi.TackLife,\r\n        timeOut: kitApi.TimeOut\r\n      };\r\n      return kit;\r\n    });\r\n  }\r\n\r\n  /**\r\n* Navigue vers l'impression des moulages\r\n*\r\n* @private\r\n* @memberof CreateMoldingPage\r\n*/\r\n  private printMolding() {\r\n    return of(this.navCtrl.navigateForward(['molding/print-molding-sheet', this.molding.id]));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AdditionalMaterial } from 'src/app/_interfaces/molding/composite-material-types';\nimport { RequestService } from 'src/app/core/services/request.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OtherMaterialsService {\n\n  constructor(private requestService: RequestService) { }\n\n  addOne(mat: AdditionalMaterial) {\n    return this.requestService.createPostRequest(`${environment.moldingApi}additional_materials`, mat);\n    // .subscribe(\n    //   () => {\n    //     console.log('materiau ajouté');\n    //   },\n    //   (err) => {\n    //     console.error('Erreur lors de l\\'ajout du matériau', err);\n    //   });\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Tool } from 'src/app/_interfaces/tooling/tool';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RequestService } from 'src/app/core/services/request.service';\nimport { AlertService } from 'src/app/core/services/divers/alert.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolService {\n  constructor(\n    private http: HttpClient,\n    private requestService: RequestService,\n    private alertService: AlertService,\n  ) { }\n\n  getToolByInput(inputOTValue: string) {\n    return new Promise((resolve, reject) => {\n      switch (inputOTValue.length) {\n        case 5 || 6:\n          this.getToolByToolNumber(inputOTValue)\n            .subscribe((responseTool: Tool) => {\n              resolve(responseTool);\n            },\n              (message: string) => {\n                this.alertService.simpleAlert('Erreur', 'Le serveur outillage à renvoyé une erreur :', message);\n                reject();\n              });\n          break;\n        case 7:\n          // this.toolService.getEquipement()\n          break;\n        case 8:\n          if (inputOTValue.startsWith('OT')) {\n            this.getToolByToolNumber(inputOTValue.substring(inputOTValue.length - 5))\n              .subscribe((responseTool: Tool) => {\n                resolve(responseTool);\n              },\n                (message: string) => {\n                  this.alertService.simpleAlert('Erreur', 'Le serveur outillage à renvoyé une erreur :', message);\n                  reject();\n                });\n          }\n          break;\n\n        default:\n          this.getToolByIdentification(inputOTValue)\n            .then((responseTool: Tool) => {\n              resolve(responseTool);\n            },\n              (message: string) => {\n                this.alertService.simpleAlert('Erreur', 'Le serveur outillage à renvoyé une erreur :', message);\n                reject();\n              })\n            .catch((error) => {\n              console.error(error);\n            });\n          break;\n      }\n    });\n  }\n\n  getToolById(idTool: string) {\n    return this.requestService.createGetRequest(`${environment.toolApi}tools/${idTool}`);\n  }\n\n  getToolByToolNumber(toolNumber: string): Observable<Tool | undefined> {\n    return this.requestService\n    .createGetRequest(`${environment.toolApi}tools?sapToolNumber=${toolNumber}`)\n      .pipe(\n        map((returnsData: any) => {\n          if (returnsData.length === 1) {\n            const returnMoldingTool: Tool = returnsData[0];\n            return returnMoldingTool;\n          } else if (returnsData.length > 1) {\n            console.error('Il y a plus d\\'un outillage correspondant en base de donnée');\n            return undefined;\n          } else {\n            console.error('aucun outillage trouvé');\n            return undefined;\n          }\n        }));\n  }\n\n  getToolByIdentification(identification: string) {\n    return new Promise((resolve, reject) => {\n      this.requestService.createGetRequest(`${environment.toolApi}tools?identification=${identification}`)\n        .subscribe((returnsData: any) => {\n          if (returnsData.length === 1) {\n            const returnMoldingTool: Tool = returnsData[0];\n            resolve(returnMoldingTool);\n          } else if (returnsData.length > 1) {\n            reject('Il y a plus d\\'un outillage correspondant en base de donnée');\n          } else {\n            reject('aucun outillage trouvé');\n          }\n        },\n          (error) => {\n            console.log(error);\n            reject('Pas de réponse du serveur');\n          });\n    });\n  }\n\n  getAllTools() {\n    return new Promise((resolve, reject) => {\n      const httpHeaders = new HttpHeaders()\n        .append('content-type', 'application/json');\n      // .append('Access-Control-Allow-Origins', 'http://localhost:8100/')\n      // .append('Access-Control-Allow-methods', 'GET, OPTIONS, POST, PUT, PATCH, DELETE');\n      this.http.get(`${environment.apiServer}molding_tools`, { headers: httpHeaders })\n        .subscribe((returnsData: any) => {\n          resolve(returnsData);\n        },\n          (error) => {\n            console.log(error);\n            reject();\n          });\n    });\n  }\n  getIri(tool: Tool): string {\n    return `/api/tools/${tool.id}`;\n  }\n\n  createTool(toolToCreate: Tool) {\n    const tool: any = toolToCreate;\n    tool.sapToolNumber = parseInt(toolToCreate.sapToolNumber.substring(2), 10);\n    return this.requestService.createPostRequest(`${environment.toolApi}tools`, tool);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}