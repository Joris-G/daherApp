{"version":3,"file":"src_app_core_admin_admin_module_ts.js","mappings":"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","sources":["./src/app/core/admin/admin-routing.module.ts","./src/app/core/admin/admin.module.ts","./src/app/core/admin/components/admin-components.module.ts","./src/app/core/admin/components/admin-molding-list/admin-molding-list.component.ts","./src/app/core/admin/components/admin-user-table/admin-user-table.component.ts","./src/app/core/admin/components/shared-admin-header/shared-admin-header.component.ts","./src/app/core/admin/pages/admin-home/admin.page.ts","./src/app/core/admin/pages/admin-molding/admin-molding.page.ts","./src/app/core/admin/pages/admin-user/admin-user.page.ts","./src/app/core/services/notifications/notifications.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { RoleGuard } from '../services/users/role.guard';\r\nimport { AdminPage } from './pages/admin-home/admin.page';\r\nimport { AdminMoldingPage } from './pages/admin-molding/admin-molding.page';\r\nimport { AdminUserPage } from './pages/admin-user/admin-user.page';\r\n\r\n//TODO guard tooling et molding différents pour ségréguer les chef d'équipes\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminPage,\r\n    children:\r\n      [{\r\n        path: 'admin-user',\r\n        component: AdminUserPage,\r\n        canActivate: [RoleGuard],\r\n        data: {\r\n          expectedRole: ['ROLE_ADMIN']\r\n        },\r\n      },\r\n      {\r\n        path: 'admin-molding',\r\n        canActivate: [RoleGuard],\r\n        data: {\r\n          expectedRole: ['ROLE_ADMIN']\r\n        },\r\n        component: AdminMoldingPage,\r\n      },\r\n      ]\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRootingModule {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AppSharedModule } from 'src/app/shared/shared.module';\r\nimport { AdminRootingModule } from './admin-routing.module';\r\nimport { AdminComponentsModule } from './components/admin-components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AdminComponentsModule,\r\n    AdminRootingModule,\r\n    AppSharedModule,\r\n  ],\r\n  exports: [\r\n    AppSharedModule\r\n  ]\r\n})\r\nexport class AdminModule {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { KitService } from 'src/app/molding/services/kit.service';\r\nimport { AppSharedModule } from 'src/app/shared/shared.module';\r\nimport { AdminPage } from '../pages/admin-home/admin.page';\r\nimport { AdminMoldingPage } from '../pages/admin-molding/admin-molding.page';\r\nimport { AdminUserPage } from '../pages/admin-user/admin-user.page';\r\nimport { AdminMoldingListComponent } from './admin-molding-list/admin-molding-list.component';\r\nimport { AdminUserTableComponent } from './admin-user-table/admin-user-table.component';\r\nimport { SharedAdminHeaderComponent } from './shared-admin-header/shared-admin-header.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AppSharedModule\r\n  ],\r\n  declarations: [\r\n    AdminPage,\r\n    AdminMoldingPage,\r\n    AdminUserPage,\r\n    SharedAdminHeaderComponent,\r\n    AdminMoldingListComponent,\r\n    AdminUserTableComponent\r\n  ],\r\n  exports: [\r\n    AdminPage,\r\n    AdminMoldingPage,\r\n    AdminUserPage,\r\n    SharedAdminHeaderComponent,\r\n    AdminMoldingListComponent,\r\n    AdminUserTableComponent\r\n  ],\r\n  providers: [\r\n    KitService\r\n  ]\r\n})\r\nexport class AdminComponentsModule { }\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Molding } from 'src/app/_interfaces/molding/molding';\n\n@Component({\n  selector: 'app-admin-molding-list',\n  templateUrl: './admin-molding-list.component.html',\n  styleUrls: ['./admin-molding-list.component.scss'],\n})\nexport class AdminMoldingListComponent implements OnChanges {\n  @Input() moldings: Molding[];\n  public moldingListLoading = false;\n  public dataSource: MatTableDataSource<Molding> = new MatTableDataSource();\n  public displayedMoldingColumns: string[] = ['status', 'id', 'moldingDay', 'createdBy', 'outillage', 'commands'];\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.dataSource.data = this.moldings;\n  }\n\n  ngOnc(): void {\n    this.dataSource.data = this.moldings;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/_interfaces/user';\nimport { AlertService } from 'src/app/core/services/divers/alert.service';\nimport { LoadingService } from 'src/app/core/services/divers/loading.service';\nimport { UsersService } from 'src/app/core/services/users/users.service';\n\n@Component({\n  selector: 'app-admin-user-table',\n  templateUrl: './admin-user-table.component.html',\n  styleUrls: ['./admin-user-table.component.scss'],\n})\nexport class AdminUserTableComponent implements OnInit {\n  public users$: Observable<User[]>;\n  public selectedUser: User;\n  public isUserSelected = false;\n  public displayedUserColumns: string[] = ['id', 'username', 'nom', 'prenom', 'matricule', 'roles', 'commands'];\n  constructor(\n    private userService: UsersService,\n    private loadingService: LoadingService,\n    private alertService: AlertService,) {\n  }\n\n  ngOnInit() {\n    this.users$ = this.userService.getUsers();\n  }\n\n  statusChanged(event: any, user: User) {\n    this.confirmUser(user, event.detail.value);\n  }\n\n  onSelectUser(test: any) {\n    console.log(test);\n    this.isUserSelected = true;\n    this.selectedUser = test;\n  }\n\n  private confirmUser(user: User, state: boolean) {\n    this.loadingService.startLoading(`Mise à jour de l'utilisateur`);\n    this.userService.confirmUser(user.id, state)\n      .subscribe(\n        (responseUser) => {\n          this.loadingService.stopLoading();\n        },\n        (error) => {\n          this.loadingService.stopLoading();\n          this.alertService.simpleAlert(\n            `Erreur`,\n            `Le serveur à renvoyé une erreur`,\n            `${error}`\n          );\n        });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/_interfaces/user';\r\nimport { AuthService } from 'src/app/core/services/users/auth.service';\r\nimport { NotificationsService } from 'src/app/core/services/notifications/notifications.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n@Component({\r\n  selector: 'app-shared-admin-header',\r\n  templateUrl: './shared-admin-header.component.html',\r\n  styleUrls: ['./shared-admin-header.component.scss'],\r\n})\r\nexport class SharedAdminHeaderComponent implements OnInit, OnDestroy {\r\n  public user: User;\r\n  public documents: Observable<string>;\r\n  public data: any;\r\n  private docSub: Subscription;\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private notificationsService: NotificationsService,\r\n    private socket: Socket\r\n  ) {\r\n\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.socket.disconnect();\r\n  }\r\n  ionViewDidLeave() {\r\n    console.log('view did leave');\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = this.authService.authUser;\r\n  }\r\n  logoutClick() {\r\n    this.authService.logout()\r\n      .subscribe(() => {\r\n        this.router.navigate(['/login']);\r\n      });\r\n  }\r\n  navigateHome() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n  notifyClick() {\r\n    console.log('notify click');\r\n    this.notificationsService.newNotif();\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\nimport { IonMenu, NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.page.html',\n  styleUrls: ['./admin.page.scss'],\n})\nexport class AdminPage {\n  @ViewChild('menuAdmin') menuAdmin: IonMenu;\n  constructor(\n    private navCtrl: NavController,\n  ) { }\n  ionViewWillEnter() {\n    this.menuAdmin.open();\n  }\n  navigate(url: string) {\n    this.navCtrl.navigateForward(url);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Molding } from 'src/app/_interfaces/molding/molding';\r\nimport { MoldingService } from 'src/app/molding/services/molding.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-molding',\r\n  templateUrl: './admin-molding.page.html',\r\n  styleUrls: ['./admin-molding.page.scss'],\r\n  providers: [MoldingService]\r\n})\r\nexport class AdminMoldingPage implements OnInit {\r\n  public moldingsError = false;\r\n  public moldings$: Observable<Molding[]>;\r\n\r\n  constructor(\r\n    private moldingService: MoldingService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.moldings$ = this.moldingService.getMoldings();\r\n    // this.getMoldings();\r\n    //TODO indicators to be reloaded with interval\r\n    // this.refreshData = setInterval(() => {\r\n    //   this.getMoldings();\r\n    // }, this.refreshTime);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport {\r\n  Component, ElementRef, OnInit, ViewChild\r\n} from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport Chart from 'chart.js/auto';\r\nimport { Service } from 'src/app/_interfaces/service';\r\nimport { User } from 'src/app/_interfaces/user';\r\nimport { AlertService } from 'src/app/core/services/divers/alert.service';\r\nimport { LoadingService } from 'src/app/core/services/divers/loading.service';\r\nimport { SericesService } from 'src/app/core/services/users/serices.service';\r\nimport { UsersService } from 'src/app/core/services/users/users.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-user',\r\n  templateUrl: './admin-user.page.html',\r\n  styleUrls: ['./admin-user.page.scss'],\r\n  providers: [\r\n    UsersService, SericesService\r\n  ]\r\n})\r\nexport class AdminUserPage implements OnInit {\r\n  @ViewChild('newUsers') private newUsersCanvas: ElementRef;\r\n\r\n  public users: User[];\r\n  // public userDataSource: MatTableDataSource<User> = new MatTableDataSource();\r\n\r\n  private lineChart: any;\r\n  private weeklyLabels: string[] = [];\r\n  private weeklyUsers: number[] = [];\r\n\r\n  constructor(\r\n    private userService: UsersService,\r\n    private datePipe: DatePipe,\r\n    private loadingService: LoadingService,\r\n    private alertService: AlertService,\r\n    private serviceService: SericesService,\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.users = [];\r\n    this.loadingService.startLoading();\r\n    this.serviceService.getServices()\r\n      .subscribe((services: Service[]) => {\r\n        services.forEach((service: Service) => {\r\n          service.users.forEach((user: User) => this.users.push(user));\r\n        });\r\n        // this.userDataSource.data = this.users;\r\n        this.weeklyLabels = this.createWeeklyLabel();\r\n        this.weeklyUsers = this.createWeeklyUserData();\r\n        // console.log(this.weeklyLabels, this.weeklyUsers);\r\n        // this.lineChart.destroy();\r\n        this.lineChart = new Chart(this.newUsersCanvas.nativeElement, {\r\n          type: 'line',\r\n          data: {\r\n            labels: this.weeklyLabels,\r\n            datasets: [\r\n              {\r\n                label: 'Evolution du nombre d\\'inscription',\r\n                fill: false,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: this.weeklyUsers,\r\n                spanGaps: false,\r\n              }\r\n            ]\r\n          }\r\n        });\r\n        this.lineChart.update();\r\n        this.loadingService.stopLoading();\r\n      });\r\n  }\r\n\r\n\r\n\r\n  createWeeklyLabel(): string[] {\r\n    const endDate = new Date();\r\n    const startDate = new Date(2022, 0, 1);\r\n    const labels: string[] = [];\r\n    while (startDate < endDate) {\r\n      labels.push(this.datePipe.transform(startDate, 'dd/MM'));\r\n      startDate.setDate(startDate.getDate() + 7);\r\n    }\r\n    return labels;\r\n  }\r\n\r\n  createWeeklyUserData(): number[] {\r\n    const endDate = new Date();\r\n    let startDate = new Date(2022, 0, 1);\r\n    const totaluserPerWeekData: number[] = [];\r\n    while (startDate < endDate) {\r\n      const intermediateEndDate = new Date(startDate);\r\n      intermediateEndDate.setDate(intermediateEndDate.getDate() + 7);\r\n      const filterUsers = this.users\r\n        .filter((user) => (\r\n          new Date(user.createdAt) > startDate\r\n          &&\r\n          new Date(user.createdAt) <= intermediateEndDate)\r\n        );\r\n      const totalUserWeek = filterUsers.length;\r\n      totaluserPerWeekData.push(totalUserWeek);\r\n\r\n      startDate = intermediateEndDate;\r\n    }\r\n    return totaluserPerWeekData;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { SwPush } from '@angular/service-worker';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n  private httpHeaders = new HttpHeaders()\n    .append('Access-Control-Allow-Origin', '*');\n\n\n  constructor(\n    private socket: Socket,\n    // private _swPush: SwPush,\n    private http: HttpClient) {\n\n\n    Notification.requestPermission()\n      .then((returnedPermission) => {\n        console.log(returnedPermission);\n        if (returnedPermission === 'granted') {\n          this.socket.on('notification', data => {\n            // this.data = data;\n            // alert(data.message);\n            // this._swPush.\n            const notification = new Notification(\n              'Notification depuis le serveur',\n              { body: data.message, icon: 'assets/icons/icon-72x72.png' });\n            // const serviceWorkerRegistration = new ServiceWorkerRegistration();\n            // serviceWorkerRegistration.showNotification(\n            //   'Notification depuis le serveur',\n            //   { body: data.message, icon: 'assets/icons/icon-72x72.png' });\n            // notification.close();\n          });\n        }\n      });\n  }\n  newNotif() {\n    this.http.post('http://localhost:3000/send-notification', { message: 'testmessage' }, { headers: this.httpHeaders })\n      .subscribe((res) => {\n        // alert(res);\n      });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}