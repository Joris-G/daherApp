{"version":3,"file":"default-node_modules_angular_material_fesm2015_expansion_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2015/accordion.mjs","./node_modules/@angular/cdk/fesm2015/portal.mjs","./node_modules/@angular/material/fesm2015/expansion.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i1 from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() {\n        return this._multi;\n    }\n    set multi(multi) {\n        this._multi = coerceBooleanProperty(multi);\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkAccordion.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkAccordion, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: \"multi\" }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                }]\n        }], propDecorators: { multi: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAccordionItem.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkAccordionItem, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n        // registering to the same accordion.\n        { provide: CDK_ACCORDION, useValue: undefined },\n    ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkAccordion, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_ACCORDION]\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }];\n    }, propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordionModule, declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] });\nCdkAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordionModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkAccordion, CdkAccordionItem],\n                    declarations: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _componentFactoryResolver Used to resolve the component factory.\n     *   Only required when attaching component portals.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n     *   become a required parameter.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = (portal.componentFactoryResolver || this._componentFactoryResolver);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n            throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n        }\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (this._appRef.viewCount > 0) {\n                    this._appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkPortal, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkPortal, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTemplatePortalDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: TemplatePortalDirective, selector: \"[cdk-portal], [portal]\", providers: [\n        {\n            provide: CdkPortal,\n            useExisting: TemplatePortalDirective,\n        },\n    ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkPortalOutlet, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortalOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                    inputs: ['portal: cdkPortalOutlet'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nPortalHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: PortalHostDirective, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n        {\n            provide: CdkPortalOutlet,\n            useExisting: PortalHostDirective,\n        },\n    ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: ['portal: cdkPortalHost'],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                }]\n        }] });\nclass PortalModule {\n}\nPortalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPortalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PortalModule, declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] });\nPortalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PortalModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport * as i2 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, Input, Output, ContentChild, ViewChild, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatExpansionPanelContent, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanel, deps: [{ token: MAT_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatExpansionPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatExpansionPanel, selector: \"mat-expansion-panel\", inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n        // to the same accordion.\n        { provide: MAT_ACCORDION, useValue: undefined },\n    ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [MAT_ACCORDION]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { hideToggle: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }] } });\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelActionRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatExpansionPanelActionRow, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                }]\n        }] });\n\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n/** @docs-private */\nclass MatExpansionPanelHeaderBase {\n}\nconst _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader extends _MatExpansionPanelHeaderMixinBase {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        super();\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelHeader, deps: [{ token: MatExpansionPanel, host: true }, { token: i0.ElementRef }, { token: i2$1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatExpansionPanelHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatExpansionPanelHeader, selector: \"mat-expansion-panel-header\", inputs: { tabIndex: \"tabIndex\", expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [matExpansionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['tabIndex'], animations: [matExpansionAnimations.indicatorRotate], host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatExpansionPanel, decorators: [{\n                        type: Host\n                    }] }, { type: i0.ElementRef }, { type: i2$1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelDescription.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatExpansionPanelDescription, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatExpansionPanelTitle, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle;\n    }\n    set hideToggle(show) {\n        this._hideToggle = coerceBooleanProperty(show);\n    }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAccordion.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAccordion, selector: \"mat-accordion\", inputs: { multi: \"multi\", hideToggle: \"hideToggle\", displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n        {\n            provide: MAT_ACCORDION,\n            useExisting: MatAccordion,\n        },\n    ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    inputs: ['multi'],\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatExpansionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionModule, declarations: [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent], imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule], exports: [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent] });\nMatExpansionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionModule, imports: [[CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    declarations: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n"],"names":["i0","InjectionToken","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","Output","NgModule","coerceBooleanProperty","Subject","Subscription","i1","nextId$1","CDK_ACCORDION","CdkAccordion","constructor","_stateChanges","_openCloseAllActions","id","_multi","multi","openAll","next","closeAll","ngOnChanges","changes","ngOnDestroy","complete","ɵfac","ɵdir","provide","useExisting","type","args","selector","exportAs","providers","nextId","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","ChangeDetectorRef","UniqueSelectionDispatcher","useValue","undefined","decorators","CdkAccordionModule","ɵmod","ɵinj","exports","declarations","ElementRef","Injector","DOCUMENT","throwNullPortalError","Error","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","attach","host","ngDevMode","hasAttached","_attachedHost","detach","isAttached","setAttachedHost","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","TemplatePortal","template","context","templateRef","origin","elementRef","DomPortal","element","nativeElement","BasePortalOutlet","_isDisposed","attachDomPortal","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","dispose","setDisposeFn","fn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","_document","parentNode","anchorNode","createComment","insertBefore","appendChild","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","length","destroy","create","NULL","attachView","hostView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","rootNodes","forEach","rootNode","detectChanges","index","indexOf","remove","DomPortalHost","CdkPortal","TemplateRef","ViewContainerRef","TemplatePortalDirective","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","attachedRef","_attachedRef","ngOnInit","ref","clear","nodeType","ELEMENT_NODE","ComponentFactoryResolver","inputs","PortalHostDirective","PortalModule","PortalInjector","_parentInjector","_customTokens","get","token","notFoundValue","value","i2","i3","CommonModule","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChild","ViewChild","Host","Attribute","QueryList","ContentChildren","mixinTabIndex","MatCommonModule","i2$1","FocusKeyManager","distinctUntilChanged","startWith","filter","take","ENTER","hasModifierKey","SPACE","ANIMATION_MODULE_TYPE","merge","trigger","state","style","transition","animate","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","event","hideToggle","togglePosition","_togglePosition","_hasSpacing","displayMode","_getExpandedState","ngAfterContentInit","_lazyContent","_portal","_containsFocus","_body","focusedElement","activeElement","bodyElement","contains","ɵcmp","encapsulation","None","changeDetection","OnPush","outputs","animations","styles","MatExpansionPanelActionRow","class","MatExpansionPanelHeaderBase","_MatExpansionPanelHeaderMixinBase","MatExpansionPanelHeader","panel","_element","_focusMonitor","tabIndex","_parentChangeSubscription","accordionHideToggleChange","parseInt","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","options","ngAfterViewInit","monitor","_handleHeaderFocus","stopMonitoring","FocusMonitor","NgIf","MatExpansionPanelDescription","MatExpansionPanelTitle","MatAccordion","arguments","_ownHeaders","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","descendants","MatExpansionModule","imports"],"sourceRoot":"webpack:///"}