{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/_services/applicationUpdates/update-app.service.ts","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Update } from 'src/app/_interfaces/update';\nimport { AlertService } from '../divers/alert.service';\nimport { AuthService } from '../users/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateAppService {\n\n  private tableUpdates = [\n    {\n      id: 1,\n      dateUpdate: new Date(2022, 4, 9),\n      description:\n        'Pour associer un outillage à un moulage il suffit de scanner le numéro d\\'OT dans l\\'OF.' +\n        'Vous devez le scanner comme un kit',\n      title: 'Module Moulage'\n    },\n    {\n      id: 2,\n      dateUpdate: new Date(2022, 4, 9),\n      description: 'Le module outillage est ouvert pour test',\n      title: 'Module Outillage'\n    },\n  ];\n\n  constructor(\n    private authService: AuthService,\n    private alertService: AlertService,\n  ) {\n  }\n\n\n\n  /**\n   *Si la promise retourn true c'est que toutes les updates sont vues\n   *Si la promise return false l'utilisateur reverra les update à sa prochaine connexion\n   *\n   * @return\n   * @memberof UpdateAppService\n   */\n  showUpdates() {\n    this.getUpdatesToShow()\n      .subscribe((updates: Update[]) => {\n        if (updates) {\n          updates.forEach((update: Update) => {\n            this.alertService.simpleAlert('Info sur la mise à jours', update.title, update.description);\n          });\n        }\n      });\n  }\n\n\n\n  private getUpdates(day1?: Date): Update[] | null {\n    const updates = this.tableUpdates.filter(update => update.dateUpdate >= new Date(day1));\n    if (updates.length > 0) {\n      return updates;\n    } else {\n      return null;\n    }\n  }\n\n\n\n  /**\n   * Quand la base des mises à jours sera faites enlever le of\n   *\n   * @private\n   * @return\n   * @memberof UpdateAppService\n   */\n  private getUpdatesToShow(): Observable<Update[]> {\n    const lastConnection = this.authService.authUser.lastCon;\n    return of(this.getUpdates(lastConnection));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { SharedUserHeaderModule } from 'src/app/composants/shared-user-header/shared-user-header.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [LoginPage],\r\n})\r\nexport class LoginPageModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IonInput, NavController } from '@ionic/angular';\r\nimport { UpdateAppService } from 'src/app/_services/applicationUpdates/update-app.service';\r\nimport { AuthService } from 'src/app/_services/users/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { isDevMode } from '@angular/core';\r\nimport { LoadingService } from 'src/app/_services/divers/loading.service';\r\nimport { AlertService } from 'src/app/_services/divers/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  @ViewChild('userName') userName: IonInput;\r\n  @ViewChild('password') password: IonInput;\r\n  public loginForm: FormGroup;\r\n  private reRouteOpts = [\r\n    {\r\n      roles: ['ROLE_MOULEUR', '\tROLE_RESP_MOULAGE', 'ROLE_CE_MOULAGE'],\r\n      route: 'molding'\r\n    },\r\n    {\r\n      roles: ['ROLE_RESP_OUTIL', 'ROLE_CE_OUTIL', 'ROLE_OUTILLEUR'],\r\n      route: 'tooling'\r\n    },\r\n    {\r\n      roles: ['ROLE_ADMIN', 'ROLE_USER', 'ROLE_METHODE'],\r\n      route: 'molding/create-molding'\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private loadingService: LoadingService,\r\n    private updateService: UpdateAppService,\r\n    private navControler: NavController,\r\n    private alertService: AlertService,\r\n  ) { }\r\n\r\n  ionViewWillEnter(): void {\r\n    if (isDevMode()) {\r\n      this.loginForm.setValue({\r\n        userName: environment.username,\r\n        password: environment.password\r\n      });\r\n      // this.onSubmit();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      password: ['']\r\n    });\r\n    // Notification.requestPermission().then((result) => {\r\n    //   if (!('Notification' in window)) {\r\n    //     alert('Ce navigateur ne prend pas en charge la notification de bureau');\r\n    //   }\r\n    //   console.log(result);\r\n    //   const img = 'assets/images/logoDaher.png';\r\n    //   const text = 'Coucou ! Votre tâche \"' + '\" arrive maintenant à échéance.';\r\n    //   const notification = new Notification('Liste de trucs à faire', { body: text, icon: img });\r\n    // });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loadingService.startLoading('Patienter pendant la connexion');\r\n    this.authService.authenticate(\r\n      this.loginForm.get('userName').value,\r\n      this.loginForm.get('password').value || this.loginForm.get('userName').value)\r\n      .subscribe(() => {\r\n        this.afterLoginActions();\r\n      },\r\n        (error) => {\r\n          this.logginError(error);\r\n        },\r\n      );\r\n  }\r\n\r\n  private afterLoginActions() {\r\n    this.loadingService.stopLoading()\r\n      .then(() => {\r\n        this.loginForm.reset();\r\n        this.reRouteUser();\r\n        this.updateService.showUpdates();\r\n      });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Trouve la route privilégiée de l'utilisateur. Puis navigue vers la route\r\n   *\r\n   * @private\r\n   * @memberof LoginPage\r\n   */\r\n  private reRouteUser() {\r\n    this.reRouteOpts.forEach((routeOpt) => {\r\n      if (this.authService.authUser.roles.find(role => routeOpt.roles.find(roleOpt => roleOpt === role))) {\r\n        this.navControler.navigateForward(routeOpt.route);\r\n      } else {\r\n        this.navControler.navigateForward('home');\r\n      }\r\n    });\r\n  }\r\n  private logginError(error: any) {\r\n    console.error(error);\r\n    this.alertService.simpleAlert(\r\n      'Erreur d\\'authentification',\r\n      '',\r\n      'Le nom d\\'utilisateur ou votre mot de passe n\\'est pas correct',\r\n    );\r\n    this.loadingService.stopLoading();\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}