{"version":3,"file":"common.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/dir-e8b767a8.js","./node_modules/@ionic/core/dist/esm/focus-visible-02bf7a99.js","./node_modules/@ionic/core/dist/esm/index-3f6412b6.js","./src/app/_services/molding/kits/kit.service.ts","./src/app/_services/molding/moldings/molding.service.ts"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nconst isRTL = (hostEl) => {\n  if (hostEl) {\n    if (hostEl.dir !== '') {\n      return hostEl.dir.toLowerCase() === 'rtl';\n    }\n  }\n  return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n\nexport { isRTL as i };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst ION_FOCUSED = 'ion-focused';\nconst ION_FOCUSABLE = 'ion-focusable';\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'Home', 'End'];\nconst startFocusVisible = (rootEl) => {\n  let currentFocus = [];\n  let keyboardMode = true;\n  const ref = (rootEl) ? rootEl.shadowRoot : document;\n  const root = (rootEl) ? rootEl : document.body;\n  const setFocus = (elements) => {\n    currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\n    elements.forEach(el => el.classList.add(ION_FOCUSED));\n    currentFocus = elements;\n  };\n  const pointerDown = () => {\n    keyboardMode = false;\n    setFocus([]);\n  };\n  const onKeydown = (ev) => {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  };\n  const onFocusin = (ev) => {\n    if (keyboardMode && ev.composedPath) {\n      const toFocus = ev.composedPath().filter((el) => {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  };\n  const onFocusout = () => {\n    if (ref.activeElement === root) {\n      setFocus([]);\n    }\n  };\n  ref.addEventListener('keydown', onKeydown);\n  ref.addEventListener('focusin', onFocusin);\n  ref.addEventListener('focusout', onFocusout);\n  ref.addEventListener('touchstart', pointerDown);\n  ref.addEventListener('mousedown', pointerDown);\n  const destroy = () => {\n    ref.removeEventListener('keydown', onKeydown);\n    ref.removeEventListener('focusin', onFocusin);\n    ref.removeEventListener('focusout', onFocusout);\n    ref.removeEventListener('touchstart', pointerDown);\n    ref.removeEventListener('mousedown', pointerDown);\n  };\n  return {\n    destroy,\n    setFocus\n  };\n};\n\nexport { startFocusVisible };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/* Ionicons v6.0.0, ES Modules */\nconst arrowDown = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Arrow Down</title><path stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M112 268l144 144 144-144M256 392V100' class='ionicon-fill-none'/></svg>\";\nconst caretBackSharp = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Caret Back</title><path d='M368 64L144 256l224 192V64z'/></svg>\";\nconst caretDownSharp = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Caret Down</title><path d='M64 144l192 224 192-224H64z'/></svg>\";\nconst caretUpSharp = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Caret Up</title><path d='M448 368L256 144 64 368h384z'/></svg>\";\nconst chevronBack = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Chevron Back</title><path stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M328 112L184 256l144 144' class='ionicon-fill-none'/></svg>\";\nconst chevronDown = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Chevron Down</title><path stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M112 184l144 144 144-144' class='ionicon-fill-none'/></svg>\";\nconst chevronForward = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Chevron Forward</title><path stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M184 112l144 144-144 144' class='ionicon-fill-none'/></svg>\";\nconst chevronForwardOutline = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Chevron Forward</title><path stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M184 112l144 144-144 144' class='ionicon-fill-none'/></svg>\";\nconst ellipsisHorizontal = \"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' class='ionicon' viewBox='0 0 512 512'><title>Ellipsis Horizontal</title><circle cx='256' cy='256' r='48'/><circle cx='416' cy='256' r='48'/><circle cx='96' cy='256' r='48'/></svg>\";\n\nexport { arrowDown as a, chevronForwardOutline as b, caretBackSharp as c, chevronBack as d, ellipsisHorizontal as e, chevronForward as f, chevronDown as g, caretUpSharp as h, caretDownSharp as i };\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Kit } from 'src/app/_interfaces/molding/kit';\nimport { environment } from 'src/environments/environment';\nimport { RequestService } from 'src/app/_services/request.service';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError, map } from 'rxjs/operators';\nimport { AlertService } from '../../divers/alert.service';\n\n@Injectable()\nexport class KitService {\n\n  constructor(\n    private requestService: RequestService,\n    private alertService: AlertService,\n  ) { }\n\n  getKitById(id: string): Observable<Kit | undefined> {\n    return this.requestService.createGetRequest(`${environment.moldingApi}datas_kits?page=1&idMM=${id}`)\n      .pipe(\n        tap(\n          (response) => this.log(response),\n          (error) => {\n            console.error(error);\n            this.alertService.simpleAlert(\n              'Erreur Kit',\n              'Kit non conforme',\n              'Il semble y avoir un problème avec le kit scanné. Vérifier le kit et essayer de nouveau.');\n          }),\n        map((returnsData) => {\n          console.log(returnsData);\n          const kit: Kit = {\n            id: returnsData[0].id,\n            aCuirAv: returnsData[0].ACuirAv,\n            aDrapAv: returnsData[0].ADrapAv,\n            createdAt: returnsData[0].createdAt,\n            decongel: returnsData[0].Decongel,\n            designationSAP: returnsData[0].DesignationSAP,\n            idMM: returnsData[0].idMM,\n            lotSAP: returnsData[0].LotSAP,\n            peremptionMoins18: returnsData[0].PeremptionMoins18,\n            referenceSAP: returnsData[0].ReferenceSAP,\n            status: returnsData[0].status,\n            tackLife: returnsData[0].TackLife,\n            timeOut: returnsData[0].TimeOut,\n            updateAt: returnsData[0].updateAt\n          };\n          console.log(kit);\n          return kit;\n        }),\n        catchError((error) => this.handleError(error, []))\n      );\n  }\n\n\n  isPerim(dateToCheck: Date, baseDate: Date): boolean {\n    return (new Date(dateToCheck) < new Date(baseDate));\n  }\n\n  /**\n   * test si kit déjà dans le moulage\n   *\n   * @param kitToTest du type KIT\n   * @param kits la liste des kits\n   * @return retourne un boolean\n   * @memberof KitService\n   */\n  kitIsInKits(kitToTest: Kit, kits: Kit[]): boolean {\n    if (kits.length <= 0) {\n      return false;\n    }\n    return kits.every(kit => kit.idMM === kitToTest.idMM);\n  }\n\n  getIri(kit: Kit): string {\n    return `/api/datas_kits/${kit.id}`;\n  }\n\n  // private async wrongKitInputAlert() {\n\n  //   const alert = await this.alertController.create({\n  //     cssClass: 'my-custom-class',\n  //     header: 'Erreur Kit',\n  //     subHeader: 'Kit non conforme',\n  //     message: 'Il semble y avoir un problème avec le kit scanné. Vérifier le kit et essayer de nouveau.',\n  //     buttons: ['OK']\n  //   });\n\n  //   await alert.present();\n\n  //   const { role } = await alert.onDidDismiss();\n  //   // console.log('onDidDismiss resolved with role', role);\n  // }\n\n  private log(response: any) {\n    console.table(response);\n  }\n\n  private handleError(error: Error, errorValue: any) {\n    console.error(error);\n    return of(errorValue);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Kit } from 'src/app/_interfaces/molding/kit';\r\nimport { Molding, MoldingIri } from 'src/app/_interfaces/molding/molding';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { KitService } from '../kits/kit.service';\r\nimport { ToolService } from 'src/app/_services/tooling/tools/tool.service';\r\nimport { UsersService } from 'src/app/_services/users/users.service';\r\nimport { RequestService } from 'src/app/_services/request.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n/**\r\n * Service de gestion des kits\r\n *\r\n * @export\r\n * @class MoldingService\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MoldingService {\r\n\r\n  /**\r\n   * Creates an instance of MoldingService.\r\n   *\r\n   * @param kitService\r\n   * @param toolService\r\n   * @param userService\r\n   * @param requestService\r\n   * @memberof MoldingService\r\n   */\r\n  constructor(\r\n    private kitService: KitService,\r\n    private toolService: ToolService,\r\n    private userService: UsersService,\r\n    private requestService: RequestService,\r\n  ) {\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param moldingObject\r\n   * @return un observable\r\n   * @memberof MoldingService\r\n   */\r\n  saveMolding(moldingObject: MoldingIri): Observable<Molding | undefined> {\r\n    return this.requestService.createPostRequest(`${environment.moldingApi}moldings`, moldingObject)\r\n      .pipe(\r\n        map((response: any) => {\r\n          response.kits = this.moldingServerToMoldingObject(response);\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param moldingObject\r\n   * @return observable\r\n   * @memberof MoldingService\r\n   */\r\n  updateMolding(moldingObject: MoldingIri): Observable<Molding> {\r\n    const url = `${environment.moldingApi}moldings/${moldingObject.id}`;\r\n    return this.requestService.createPatchRequest(url, moldingObject);\r\n  }\r\n\r\n\r\n  /**\r\n   * Recalcul le kit le plus défavorable\r\n   *\r\n   * @param molding\r\n   * @memberof MoldingService\r\n   */\r\n  updateDates(molding: Molding): void {\r\n    molding.aCuireAv = null;\r\n    molding.aDraperAv = null;\r\n    molding.matPolym = molding.kits.reduce((defPolym, kit) => (defPolym.aCuirAv > kit.aCuirAv) ? kit : defPolym);\r\n    molding.aCuireAv = molding.matPolym.aCuirAv;\r\n    molding.matDrap = molding.kits.reduce((defDrap, kit) => (defDrap.aDrapAv > kit.aDrapAv) ? kit : defDrap);\r\n    molding.aDraperAv = molding.matDrap.aDrapAv;\r\n    // molding.kits.forEach((kit: Kit) => {\r\n    //   if (kit.aCuirAv < molding.aCuireAv || !molding.aCuireAv) {\r\n    //     molding.aCuireAv = kit.aCuirAv;\r\n    //     molding.matPolym = kit;\r\n    //   }\r\n\r\n    //   if (kit.aDrapAv < molding.aDraperAv || !molding.aDraperAv) {\r\n    //     molding.aDraperAv = kit.aDrapAv;\r\n    //     molding.matDrap = kit;\r\n    //   }\r\n    // });\r\n  }\r\n\r\n\r\n  /**\r\n   * Cette fonction sera à détruire une fois l'issue gitHub #23 sera résolue\r\n   * https://github.com/Joris-G/daherApp/issues/23\r\n   *\r\n   * @param moldingToTransform\r\n   * @return objet moulage converti depuis la donnée reçue du serveur\r\n   * @memberof MoldingService\r\n   */\r\n  moldingServerToMoldingObject(moldingToTransform: any): Kit[] {\r\n    return moldingToTransform.kits.map((kitApi: any) => {\r\n      const kit: Kit = {\r\n        aCuirAv: kitApi.ACuirAv,\r\n        aDrapAv: kitApi.ADrapAv,\r\n        createdAt: kitApi.createdAt,\r\n        decongel: kitApi.Decongel,\r\n        designationSAP: kitApi.DesignationSAP,\r\n        id: kitApi.id,\r\n        idMM: kitApi.idMM,\r\n        lotSAP: kitApi.LotSAP,\r\n        peremptionMoins18: kitApi.PeremptionMoins18,\r\n        referenceSAP: kitApi.ReferenceSAP,\r\n        status: kitApi.status,\r\n        tackLife: kitApi.TackLife,\r\n        timeOut: kitApi.TimeOut\r\n      };\r\n      return kit;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Construit un objet molding depuis le serveur.\r\n   *\r\n   * @param id id du mouage. C'est l'id qui est encodé sur le code barre de la fiche de moulage\r\n   * @return\r\n   * @memberof MoldingService\r\n   */\r\n  getMoldingById(id: string): Observable<Molding | undefined> {\r\n    return this.requestService.createGetRequest(`${environment.moldingApi}moldings/${id}`)\r\n      .pipe(\r\n        map((returnsData: any) => {\r\n          returnsData.kits = this.moldingServerToMoldingObject(returnsData);\r\n          return returnsData;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  /**\r\n   * Fonction utilisé dans la page d'administration pour lister tout les moulages.\r\n   *\r\n   * @return retourne la liste complète des moulages\r\n   * @memberof MoldingService\r\n   */\r\n  getMoldings(): Observable<Molding[] | undefined> {\r\n    return this.requestService.createGetRequest(`${environment.moldingApi}moldings`);\r\n  }\r\n\r\n  toIri(molding: Molding): MoldingIri {\r\n    return {\r\n      id: molding.id,\r\n      kits: molding.kits.map((kit: Kit) => this.kitService.getIri(kit)),\r\n      moldingDay: molding.moldingDay,\r\n      createdBy: this.userService.getIri(molding.createdBy),\r\n      outillage: (molding.OT) ? this.toolService.getIri(molding.OT) : null,\r\n      aCuireAv: molding.aCuireAv,\r\n      aDraperAv: molding.aDraperAv,\r\n      matPolym: this.kitService.getIri(molding.matPolym),\r\n      matDrap: this.kitService.getIri(molding.matDrap),\r\n    };\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}